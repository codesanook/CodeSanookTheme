@using Codesanook.Common.Web
@{
    Func<dynamic, dynamic> Zone = x => Display(x); // Zone as an alias for Display to help make it obvious when we're displaying zones
    var contentPath = this.GetUrlPathRelativeToModule("Content");
}

<div id="header">
    <div class="container-wrapper">
        <div class="logo text-center p-t-10 p-b-10 has-border-bottom">
            <img src="@this.Combine(contentPath, "logo.png")" /><br />
            <small>สนุกไปกับการเขียนโค้ด สังคมแห่งการเรืยนรู้ แบ่งปันความรู้ด้านโปรแกรมมิ่ง</small>
        </div>
    </div>
</div>

@if (Model.Header != null)
{
    <header id="layout-header" class="group">
        <div id="header">
            @Zone(Model.Header)
        </div>
    </header>
}

@if (Model.Navigation != null)
{
    <div id="layout-navigation" class="group">
        @Zone(Model.Navigation)
    </div>
}

@if (Model.Featured != null)
{
    <h1>feature</h1>
    <div id="layout-featured" class="group">
        @Zone(Model.Featured)
    </div>
}

@if (Model.BeforeMain != null)
{
    <div id="layout-before-main" class="group">
        @Zone(Model.BeforeMain)
    </div>
}

@if (Model.Content != null)
{
    <div id="content" class="group">
        @Zone(Model.Content)
    </div>
}

<h1>Hello world</h1>
@Html.React("Components.Counter", new { defaultCounterValue = 99 })
@Html.ReactInitJavaScript()
